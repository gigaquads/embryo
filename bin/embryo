#!/usr/bin/env python3
# encoding=utf8
# vim: set filetype=python

from appyratus.util.argz import Prog, Subparser, Arg

from embryo import EmbryoGenerator


PROG = dict(
    prog="embryo",
    name="Embryo",
    version="0",
    tagline="wat",
)


class EmbryoCreateSubparser(Subparser):
    name = 'create'
    help = 'generate new embryo'
    defaults = dict(action='create')

    embryo_arg = Arg(
        flags=('embryo', ),
        type=str,
        help="The name of the embryo for embryonic generation."
    )
    dest_arg = Arg(
        flags=('-d', '--dest'),
        type=str,
        default='./',
        help=
        "Destination path to the directory where the embryo should be generated."
    )
    name_arg = Arg(
        flags=('-n', '--name'),
        type=str,
        default='',
        help="The name of the project you're creating."
    )
    context_arg = Arg(
        flags=('-c', '--context'),
        help="Path to a context .json or .yml file.",
    )


class EmbryoProg(Prog):
    create_subparser = EmbryoCreateSubparser()

    def create(self):
        return EmbryoGenerator.from_args(self.args)


def main():
    """
    Main
    """
    prog = EmbryoProg(data=PROG)
    prog.run()


if __name__ == "__main__":
    try:
        main()
    except Exception as error:
        print("ERROR {}".format(error))
        raise error
