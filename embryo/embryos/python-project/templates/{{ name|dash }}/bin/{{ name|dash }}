#!/usr/bin/env python3
# encoding=utf8
# vim: set filetype=python

import argparse
import sys

CONFIG = dict(
    prog="{{ name|snake }}",
    name="{{ name|title }}",
    version="{{ version }}",
    tagline="{{ tagline }}", )
VERSION_FORMAT = "{name} {version}, {tagline}"


def version():
    return VERSION_FORMAT.format(**CONFIG)


def build_parser():
    """
    Build parser for interactivity
    """

    parser = argparse.ArgumentParser()
    action = argparse.ArgumentParser(parents=[parser])
    parser.add_argument(
        'action',
        type=str,
        choices=['new'],
        help='''
        The action to perform
        ''')
    return parser


def parse_args(parser):
    args, unknown = parser.parse_known_args()

    # now combine known and unknown arguments into a single dict
    args_dict = {
        k: getattr(args, k)
        for k in dir(args) if not k.startswith('_')
    }

    for i in range(0, len(unknown), 2):
        k = unknown[i]
        v = unknown[i + 1]
        args_dict[k.lstrip('-')] = v

    # build a custom type with the combined argument names as attributes
    arguments = type('Arguments', (object, ), args_dict)()

    return arguments


def main():
    """
    Main
    """
    parser = build_parser()
    args = parse_args(parser)
    action = args.action
    if not action:
        parser.add_argument(
            '-v',
            '--version',
            action='version',
            help='The version information for this script',
            version=tag())

    # as `elif`, add additional routing here
    # order is important
    if action == 'new':
        print('Not implemented')
    else:
        parser.print_usage()


if __name__ == "__main__":
    try:
        main()
    except Exception as error:
        print(error)
